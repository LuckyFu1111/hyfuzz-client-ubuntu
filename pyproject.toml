# ============================================================================
# HyFuzz MCP Server - Modern Python Project Configuration
# ============================================================================
# PEP 517/518 compliant project configuration file
# Replaces setup.cfg for build system configuration
# ============================================================================

[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hyfuzz-server"
version = "1.0.0"
description = "HyFuzz MCP Server - Intelligent Payload Generation with LLM"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "HyFuzz Team", email = "team@hyfuzz.org"}
]
maintainers = [
    {name = "HyFuzz Team", email = "team@hyfuzz.org"}
]

# Keywords for package discovery
keywords = [
    "mcp",
    "model-context-protocol",
    "fuzzing",
    "llm",
    "deepseek",
    "ollama",
    "hyfuzz",
    "security",
    "testing",
]

# Project classification
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Security",
    "Topic :: System :: Networking",
]

# Core dependencies
dependencies = [
    "requests>=2.28.0",
    "aiohttp>=3.8.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.1.0",
    "python-dotenv>=1.0.0",
    "PyYAML>=6.0.0",
    "tiktoken>=0.5.0",
    "jsonschema>=4.20.0",
    "numpy>=1.26.0",
    "pandas>=2.1.0",
    "networkx>=3.2",
    "cachetools>=5.3.0",
    "python-json-logger>=2.0.0",
    "click>=8.1.0",
    "colorama>=0.4.6",
    "decorator>=5.1.0",
]

[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.5.0",
    "pytest-mock>=3.12.0",
    "black>=23.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    "isort>=5.13.0",
    "pylint>=3.0.0",
]

# Documentation dependencies
docs = [
    "Sphinx>=7.2.0",
    "sphinx-rtd-theme>=2.0.0",
    "sphinx-markdown-parser>=0.2.0",
]

# Testing dependencies
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.5.0",
    "pytest-mock>=3.12.0",
    "responses>=0.24.0",
]

# All dependencies combined
all = []

[project.urls]
Homepage = "https://github.com/your-org/hyfuzz-server-windows"
Documentation = "https://docs.hyfuzz.org"
Repository = "https://github.com/your-org/hyfuzz-server-windows.git"
Issues = "https://github.com/your-org/hyfuzz-server-windows/issues"
Changelog = "https://github.com/your-org/hyfuzz-server-windows/blob/main/CHANGELOG.md"

[project.scripts]
hyfuzz-server = "src.__main__:main"

# ============================================================================
# Tool: Black (Code Formatter)
# ============================================================================
[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | venv
  | .venv
)/
'''

# ============================================================================
# Tool: isort (Import Sorting)
# ============================================================================
[tool.isort]
profile = "black"
line_length = 100
multi_line_mode = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true
known_first_party = "src"

# ============================================================================
# Tool: MyPy (Type Checking)
# ============================================================================
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict = false

[[tool.mypy.overrides]]
module = "setuptools.*"
ignore_missing_imports = true

# ============================================================================
# Tool: pytest (Testing)
# ============================================================================
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --strict-markers --tb=short"
markers = [
    "unit: unit tests",
    "integration: integration tests",
    "performance: performance tests",
    "slow: slow tests",
    "async: async tests",
]
asyncio_mode = "auto"

# ============================================================================
# Tool: Coverage (Code Coverage)
# ============================================================================
[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__main__.py",
    "*/setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
    "@abstractmethod",
    "@abc.abstractmethod",
]
skip_covered = false
precision = 2

[tool.coverage.html]
directory = "htmlcov"

# ============================================================================
# Tool: Pylint (Code Linting)
# ============================================================================
[tool.pylint.messages_control]
disable = [
    "C0330",
    "C0326",
    "R0903",
    "R0913",
    "W0212",
]

[tool.pylint.format]
max-line-length = 100

[tool.pylint.design]
max-attributes = 7

# ============================================================================
# Setuptools Configuration
# ============================================================================
[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]
exclude = ["tests*", "docs*"]

[tool.setuptools.package-data]
src = [
    "config/*.yaml",
    "data/*.json",
    "data/knowledge_cache/*",
]

# ============================================================================
# End of pyproject.toml
# ============================================================================